version: "3"

tasks:
  up:
    desc: 開発サーバーを起動します
    deps:
      - up:frontend

  up:frontend:
    desc: 開発サーバーを起動します
    cmds:
      - docker compose up -w

  up:frontend:npm:
    dir: packages/akane-next
    cmds:
      - npm run dev

  up:frontend:storybook:
    desc: Storybook を起動します
    aliases:
      - storybook
    dir: packages/akane-next
    cmds:
      - npm run storybook

  down:
    desc: 開発サーバーを停止します
    cmds:
      - docker compose down --remove-orphans

  build:
    desc: 開発サーバーのイメージをビルドします
    cmds:
      - docker compose build

  codegen:graphql:
    desc: GraphQLのコードジェネレータを実行します
    cmds:
      - sh ./scripts/copy-gql-schema.sh
      - npm -w packages/akane-next run codegen:graphql

  codegen:graphql:watch:
    desc: GraphQLのコードジェネレータを監視モードで実行します
    cmds:
      - sh ./scripts/copy-gql-schema.sh
      - npm -w packages/akane-next run codegen:graphql:watch

  # akane-next に対して npm コマンドを実行するタスク
  # workspace 指定が面倒なのでその shorthand として定義
  # e.g. task nan -- install -D vitest
  npm:akane-next:
    desc: npm コマンドを実行します
    aliases:
      - nan
    cmds:
      - npm -w packages/akane-next {{ .CLI_ARGS }}

  prisma:
    desc: Prisma の CLI を実行します
    dir: packages/akane-next
    cmds:
      - npx prisma {{ .CLI_ARGS }}
    env:
      DATABASE_URL: "mysql://root@localhost:3306/akane"
